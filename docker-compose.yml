name: micropay

services:
  auth-service:
    container_name: auth-service
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://redis:6379
      KAFKA_BROKER: kafka:9094
      JWT_SECRET: your-default-secret-key
      JWT_EXPIRES_IN: 24h
      LOG_LEVEL: info
    restart: always
    networks:
      - micropay-net

  integration-db:
    image: bitnami/postgresql:17.4.0
    container_name: integration-db
    environment:
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_PASSWORD: password
      POSTGRES_DB: integration
    ports:
      - "5433:5432"
    volumes:
      - integration_db_data:/var/lib/postgresql/data  
    networks:
      - micropay-net

  redis:
    image: redis:7
    container_name: redis
    environment:
      REDIS_ARGS: "--requirepass password"
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    networks:
      - micropay-net

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=CLUSTER_ID_1
    networks:
      - micropay-net

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=localCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - micropay-net

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v3.5.0
    ports:
      - 9090:9090
    networks:
      - micropay-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mount the Prometheus config file
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' # Specify the config file path
      - '--storage.tsdb.path=/prometheus' # Specify the data storage path
    extra_hosts:
        - "host.docker.internal:host-gateway"
    
  grafana:
    image: grafana/grafana:12.1.0
    ports:
      - 3001:3000
    networks:
      - micropay-net

volumes:
  redis_data:
  integration_db_data:
  prometheus_data:

networks:
  micropay-net:
    driver: bridge